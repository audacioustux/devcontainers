name: "CI - Test Features"
on:
  workflow_run:
    workflows: ["Validate devcontainer-feature.json files"]
    branches: ["main"]
    types:
      - completed
  workflow_dispatch:
  pull_request:
jobs:
  test-autogenerated:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    strategy:
      matrix:
        features:
          - common-utils-extras
        baseImage:
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v3
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli
      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .
  test-scenarios:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    strategy:
      matrix:
        features:
          - common-utils-extras
          - pulumi
          - k9s
          - cilium
          - taskfile
          - graalvm
          - scala-toolchain
          - wasm-toolchain
          - bazel
          - tilt
          - kustomize
          - bun
          - operator-sdk
          - kubebuilder
          - argo
          - vegeta
          - knative
          - ebort
          - pack-cli
          - mirrord
          - aws-sam-cli
          - localstack
          - flyctl
    steps:
      - uses: actions/checkout@v3
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli
      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .
  test-global:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - uses: actions/checkout@v3
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli
      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
